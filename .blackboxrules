明白👌，结合你当前项目的 **技术栈**（HTML5 + Tailwind CSS + FontAwesome + Vanilla JS + 模拟数据）和已完成的功能阶段，我帮你重写一份更贴合你项目的 **Rules 文档**。

---

# Rules（BuildSync 项目专用）

## 通用原则

* 在展示信息前必须验证来源与逻辑，不做无依据的假设。
* 修改代码时始终逐个文件进行，避免大规模改动难以追踪。
* 不进行空白或无意义的更改，保持代码简洁。
* 除非需求明确，否则不删除现有功能或结构。
* 使用语义化 HTML 标签和明确的命名，避免缩写或含糊变量。
* 所有实现必须兼顾 **性能 / 安全 / 可维护性**，并符合 **W3C 标准**。
* 优先模块化和可复用的代码结构，避免冗余。
* 考虑边界情况，必要时添加断言和错误提示。
* 输出保持简洁，不包含与实现无关的反馈。

---

## 项目工作流

### 第一步：项目初始化

* 阅读 `README.md` 与现有代码，理解项目目标与架构。
* 如果没有 `README.md`，创建一份，内容包括：

  * 所有页面用途说明
  * 页面布局结构
  * 样式规划（Tailwind CSS + iOS 风格组件）
  * 交互说明（角色权限、跳转逻辑）

### 第二步：需求分析与开发

#### 需求理解

* 分析用户提出的需求，验证完整性，补充遗漏点。
* 站在非技术用户的角度，选择最直观的实现方案。

#### 代码编写

* 使用 **HTML5 + Tailwind CSS** 编写页面，不引入复杂框架。
* 使用 **FontAwesome 图标**增强 UI/UX。
* 用 **Flexbox/Grid** 保证响应式，优先移动端适配（iPhone 390px）。
* 所有 HTML 结构和 CSS 样式必须有中文注释，便于非技术人员理解。
* 使用 **Vanilla JavaScript** 实现交互逻辑：角色切换、权限控制、数据模拟。
* 优化图片与媒体加载，避免拖慢页面。

#### 问题解决

* 页面显示异常时，逐步检查 HTML 与 CSS 结构。
* 找出原因并提出清晰的解决思路。
* 根据用户反馈快速迭代。

### 第三步：总结与优化

* 完成任务后，反思实现步骤并总结可优化点。
* 更新 `README.md`，同步最新页面结构与交互说明。
* 使用 **HTML5 高级特性**（如 Canvas、SVG）丰富交互。
* 进行性能优化：Tailwind Purge、CSS/JS 压缩、图片压缩。
* 确保页面在 Safari、Chrome、Edge 等主流浏览器正常显示。

---

## 编码规范与测试

* 使用常量替代硬编码值，提升代码可维护性。
* 关键交互（角色切换、项目→群聊跳转、权限控制）实现错误处理和日志输出。
* 为新增/修改的交互逻辑编写测试用例，覆盖常见与边界情况。
* 使用断言提前捕获潜在错误。

